version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:17-alpine 
    volumes:
      - postgres_data:/var/lib/postgresql/data/ 
  
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s # Check every 5 seconds
      timeout: 5s  # Timeout after 5 seconds
      retries: 5 # Retry 5 times before marking as unhealthy

  # Django Web Application Service (Gunicorn)
  web:
    build:
      context: . # Build the Docker image from the current directory (CurioCrate/)
      dockerfile: Dockerfile 
    volumes:
      - static_volume:/app/CurioCrate/staticfiles
      - media_volume:/app/CurioCrate/media
    # Expose port 8000 internally for Nginx to connect to. Not exposed to the host.
    expose:
      - 8000
    # Load all Django and external API environment variables from .env
    env_file:
      - ./.env
    environment:
      SECRET_KEY: ${SECRET_KEY}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      GROQ_API_KEY: ${GROQ_API_KEY}
      GMAIL_APP_PASSWORD: ${GMAIL_APP_PASSWORD}
      DB_HOST: db
      DB_PORT: 5432
      DJANGO_SETTINGS_MODULE: CurioCrate.settings

    depends_on:
      db:
        condition: service_healthy

  # Nginx Reverse Proxy Service
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
      - static_volume:/vol/web/static
      - media_volume:/vol/web/media

    ports:
      - "8080:8080"


    depends_on:
      - web

# Define named volumes for data persistence
volumes:
  postgres_data:
  static_volume: 
  media_volume: 